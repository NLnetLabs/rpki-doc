# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018-2020, NLnet Labs (CC-BY 3.0)
# This file is distributed under the same license as the RPKI package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: RPKI \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-11-26 19:43+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../krill/docker.rst:4
msgid "Running with Docker"
msgstr ""

#: ../../krill/docker.rst:6
msgid ""
"This page explains the additional features and differences compared to "
"running Krill with Cargo that you need to be aware of when running Krill "
"with Docker."
msgstr ""

#: ../../krill/docker.rst:10
msgid "Get Docker"
msgstr ""

#: ../../krill/docker.rst:12
msgid ""
"If you do not already have Docker installed, follow the platform specific"
" installation instructions via the links in the Docker official "
"`\"Supported platforms\" documentation <https://docs.docker.com/install"
"/#supported-platforms>`_."
msgstr ""

#: ../../krill/docker.rst:18
msgid "Fetching and Running Krill"
msgstr ""

#: ../../krill/docker.rst:20
msgid ""
"The :command:`docker run` command will automatically fetch the Krill "
"image the first time you use it, and so there is no installation step in "
"the traditional sense. The :command:`docker run` command can take `many "
"arguments <https://docs.docker.com/engine/reference/run/>`_ and can be a "
"bit overwhelming at first."
msgstr ""

#: ../../krill/docker.rst:26
msgid ""
"The command below runs Krill in the background and shows how to configure"
" a few extra things like log level and volume mounts (more on this "
"below)."
msgstr ""

#: ../../krill/docker.rst:41
msgid ""
"The Docker container by default uses UTC time. If you need to use a "
"different time zone you can set this using the TZ environment variable as"
" shown in the example above."
msgstr ""

#: ../../krill/docker.rst:46
msgid "Admin Token"
msgstr ""

#: ../../krill/docker.rst:48
msgid ""
"By default Docker Krill secures itself with an automatically generated "
"admin token. You will need to obtain this token from the Docker logs in "
"order to manage Krill via the API or the :command:`krillc` CLI tool."
msgstr ""

#: ../../krill/docker.rst:57
msgid ""
"You can pre-configure the token via the ``auth_token`` Krill config file "
"setting, or if you don't want to provide a config file you can also use "
"the Docker environment variable ``KRILL_AUTH_TOKEN`` as  shown above."
msgstr ""

#: ../../krill/docker.rst:62
msgid "Running the Krill CLI"
msgstr ""

#: ../../krill/docker.rst:65
msgid "Local"
msgstr ""

#: ../../krill/docker.rst:67
msgid ""
"Using a Bash alias with ``<SOME_TOKEN>`` you can easily interact with the"
" locally running Krill daemon via its command-line interface (CLI):"
msgstr ""

#: ../../krill/docker.rst:83
msgid "Remote"
msgstr ""

#: ../../krill/docker.rst:85
msgid ""
"The Docker image can also be used to run :command:`krillc` to manage "
"remote Krill servers. Using a shell alias simplifies this considerably:"
msgstr ""

#: ../../krill/docker.rst:100
msgid ""
"Note: The ``-v`` volume mount is optional, but without it you will not be"
" able to pass files to :command:`krillc` which some subcommands require, "
"e.g."
msgstr ""

#: ../../krill/docker.rst:108
msgid "Service and Certificate URIs"
msgstr ""

#: ../../krill/docker.rst:110
msgid ""
"The Krill ``service_uri`` and ``rsync_base`` config file settings can be "
"configured via the Docker environment variable ``KRILL_FQDN`` as shown in"
" the example above. Providing ``KRILL_FQDN`` will set **both** "
"``service_uri`` and ``rsync_base``."
msgstr ""

#: ../../krill/docker.rst:116
msgid "Data"
msgstr ""

#: ../../krill/docker.rst:118
msgid ""
"Krill writes state and data files to a data directory which in Docker "
"Krill is hidden inside the Docker container and is lost when the Docker "
"container is destroyed."
msgstr ""

#: ../../krill/docker.rst:123
msgid "Persistence"
msgstr ""

#: ../../krill/docker.rst:125
msgid ""
"To protect the data you can write it to a persistent `Docker volume "
"<https://docs.docker.com/storage/volumes/>`_ which is preserved even if "
"the Krill Docker container is destroyed. The following fragment from the "
"example above shows how to configure this:"
msgstr ""

#: ../../krill/docker.rst:135
msgid "Access"
msgstr ""

#: ../../krill/docker.rst:137
msgid ""
"Some of the data files written by Krill to its data directory are "
"intended to be shared with external clients via the rsync protocol. To "
"make this possible with Docker Krill you can either:"
msgstr ""

#: ../../krill/docker.rst:141
msgid ""
"Mount the rsync data directory in the host and run rsyncd on the host, "
"*OR*"
msgstr ""

#: ../../krill/docker.rst:142
msgid ""
"Share the rsync data with another `Docker container which runs rsyncd "
"<https://hub.docker.com/search?q=rsyncd&type=image>`_"
msgstr ""

#: ../../krill/docker.rst:144
msgid "Mounting the data in a host directory:"
msgstr ""

#: ../../krill/docker.rst:150
msgid "Sharing via a named volume:"
msgstr ""

#: ../../krill/docker.rst:157
msgid "Logging"
msgstr ""

#: ../../krill/docker.rst:159
msgid ""
"Krill logs to a file by default. Docker Krill however logs by default to "
"stderr so that you can see the output using the :command:`docker logs` "
"command."
msgstr ""

#: ../../krill/docker.rst:162
msgid ""
"At the default ``warn`` log level Krill doesn't output anything unless "
"there is something to warn about. Docker Krill however comes with some "
"additional logging which appears with the prefix ``docker-krill:``. On "
"startup you will see something like the following in the logs:"
msgstr ""

#: ../../krill/docker.rst:176
msgid "Environment Variables"
msgstr ""

#: ../../krill/docker.rst:178
msgid ""
"The Krill Docker image supports the following Docker environment "
"variables which map to the following :file:`krill.conf` settings:"
msgstr ""

#: ../../krill/docker.rst:182
msgid "Environment variable"
msgstr ""

#: ../../krill/docker.rst:182
msgid "Equivalent Krill config setting"
msgstr ""

#: ../../krill/docker.rst:184
msgid "``KRILL_AUTH_TOKEN``"
msgstr ""

#: ../../krill/docker.rst:184
msgid "``auth_token``"
msgstr ""

#: ../../krill/docker.rst:186
msgid "``KRILL_FQDN``"
msgstr ""

#: ../../krill/docker.rst:186
msgid "``service_uri`` and ``rsync_base``"
msgstr ""

#: ../../krill/docker.rst:188
msgid "``KRILL_LOG_LEVEL``"
msgstr ""

#: ../../krill/docker.rst:188
msgid "``log_level``"
msgstr ""

#: ../../krill/docker.rst:190
msgid "``KRILL_USE_TA``"
msgstr ""

#: ../../krill/docker.rst:190
msgid "``use_ta``"
msgstr ""

#: ../../krill/docker.rst:193
msgid ""
"To set these environment variables use ``-e`` when invoking "
":command:`docker`, e.g.:"
msgstr ""

#: ../../krill/docker.rst:201
msgid "Using a Config File"
msgstr ""

#: ../../krill/docker.rst:203
msgid ""
"Via a volume mount you can replace the Docker Krill config file with your"
" own and take complete control:"
msgstr ""

#: ../../krill/docker.rst:210
msgid ""
"This will instruct Docker to replace the default config file used by "
"Docker Krill with the file :file:`/tmp/krill.conf` on your host computer."
msgstr ""

